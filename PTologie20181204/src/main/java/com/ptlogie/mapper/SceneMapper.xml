<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ptlogie.mapper.SceneMapper" >
  <resultMap id="BaseResultMap" type="com.ptlogie.domain.Scene" >
    <id column="scene_id" property="sceneId" jdbcType="INTEGER" />
    <result column="scene_name" property="sceneName" jdbcType="VARCHAR" />
    <result column="workshop_id" property="workshopId" jdbcType="INTEGER" />
    <result column="SceneLocation" property="scenelocation" jdbcType="VARCHAR" />
    <result column="SceneRemark" property="sceneremark" jdbcType="VARCHAR" />
    <result column="ParentSceneId" property="parentsceneid" jdbcType="INTEGER" />
    <result column="State" property="state" jdbcType="INTEGER" />
    <result column="SceneType" property="scenetype" jdbcType="VARCHAR" />
    <result column="DeviceStatus" property="devicestatus" jdbcType="VARCHAR" />
    <result column="SceneUseType" property="sceneusetype" jdbcType="INTEGER" />
    <result column="GateId" property="gateid" jdbcType="VARCHAR" />
    <result column="InsertTime" property="inserttime" jdbcType="TIMESTAMP" />
    <result column="UpdateTime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    scene_id, scene_name, workshop_id, SceneLocation, SceneRemark, ParentSceneId, State, 
    SceneType, DeviceStatus, SceneUseType, GateId, InsertTime, UpdateTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ptlogie.domain.SceneExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from scene
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from scene
    where scene_id = #{sceneId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from scene
    where scene_id = #{sceneId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ptlogie.domain.SceneExample" >
    delete from scene
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ptlogie.domain.Scene" >
    insert into scene (scene_id, scene_name, workshop_id, 
      SceneLocation, SceneRemark, ParentSceneId, 
      State, SceneType, DeviceStatus, 
      SceneUseType, GateId, InsertTime, 
      UpdateTime)
    values (#{sceneId,jdbcType=INTEGER}, #{sceneName,jdbcType=VARCHAR}, #{workshopId,jdbcType=INTEGER}, 
      #{scenelocation,jdbcType=VARCHAR}, #{sceneremark,jdbcType=VARCHAR}, #{parentsceneid,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{scenetype,jdbcType=VARCHAR}, #{devicestatus,jdbcType=VARCHAR}, 
      #{sceneusetype,jdbcType=INTEGER}, #{gateid,jdbcType=VARCHAR}, #{inserttime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ptlogie.domain.Scene" >
    insert into scene
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sceneId != null" >
        scene_id,
      </if>
      <if test="sceneName != null" >
        scene_name,
      </if>
      <if test="workshopId != null" >
        workshop_id,
      </if>
      <if test="scenelocation != null" >
        SceneLocation,
      </if>
      <if test="sceneremark != null" >
        SceneRemark,
      </if>
      <if test="parentsceneid != null" >
        ParentSceneId,
      </if>
      <if test="state != null" >
        State,
      </if>
      <if test="scenetype != null" >
        SceneType,
      </if>
      <if test="devicestatus != null" >
        DeviceStatus,
      </if>
      <if test="sceneusetype != null" >
        SceneUseType,
      </if>
      <if test="gateid != null" >
        GateId,
      </if>
      <if test="inserttime != null" >
        InsertTime,
      </if>
      <if test="updatetime != null" >
        UpdateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sceneId != null" >
        #{sceneId,jdbcType=INTEGER},
      </if>
      <if test="sceneName != null" >
        #{sceneName,jdbcType=VARCHAR},
      </if>
      <if test="workshopId != null" >
        #{workshopId,jdbcType=INTEGER},
      </if>
      <if test="scenelocation != null" >
        #{scenelocation,jdbcType=VARCHAR},
      </if>
      <if test="sceneremark != null" >
        #{sceneremark,jdbcType=VARCHAR},
      </if>
      <if test="parentsceneid != null" >
        #{parentsceneid,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="scenetype != null" >
        #{scenetype,jdbcType=VARCHAR},
      </if>
      <if test="devicestatus != null" >
        #{devicestatus,jdbcType=VARCHAR},
      </if>
      <if test="sceneusetype != null" >
        #{sceneusetype,jdbcType=INTEGER},
      </if>
      <if test="gateid != null" >
        #{gateid,jdbcType=VARCHAR},
      </if>
      <if test="inserttime != null" >
        #{inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ptlogie.domain.SceneExample" resultType="java.lang.Integer" >
    select count(*) from scene
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update scene
    <set >
      <if test="record.sceneId != null" >
        scene_id = #{record.sceneId,jdbcType=INTEGER},
      </if>
      <if test="record.sceneName != null" >
        scene_name = #{record.sceneName,jdbcType=VARCHAR},
      </if>
      <if test="record.workshopId != null" >
        workshop_id = #{record.workshopId,jdbcType=INTEGER},
      </if>
      <if test="record.scenelocation != null" >
        SceneLocation = #{record.scenelocation,jdbcType=VARCHAR},
      </if>
      <if test="record.sceneremark != null" >
        SceneRemark = #{record.sceneremark,jdbcType=VARCHAR},
      </if>
      <if test="record.parentsceneid != null" >
        ParentSceneId = #{record.parentsceneid,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        State = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.scenetype != null" >
        SceneType = #{record.scenetype,jdbcType=VARCHAR},
      </if>
      <if test="record.devicestatus != null" >
        DeviceStatus = #{record.devicestatus,jdbcType=VARCHAR},
      </if>
      <if test="record.sceneusetype != null" >
        SceneUseType = #{record.sceneusetype,jdbcType=INTEGER},
      </if>
      <if test="record.gateid != null" >
        GateId = #{record.gateid,jdbcType=VARCHAR},
      </if>
      <if test="record.inserttime != null" >
        InsertTime = #{record.inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        UpdateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update scene
    set scene_id = #{record.sceneId,jdbcType=INTEGER},
      scene_name = #{record.sceneName,jdbcType=VARCHAR},
      workshop_id = #{record.workshopId,jdbcType=INTEGER},
      SceneLocation = #{record.scenelocation,jdbcType=VARCHAR},
      SceneRemark = #{record.sceneremark,jdbcType=VARCHAR},
      ParentSceneId = #{record.parentsceneid,jdbcType=INTEGER},
      State = #{record.state,jdbcType=INTEGER},
      SceneType = #{record.scenetype,jdbcType=VARCHAR},
      DeviceStatus = #{record.devicestatus,jdbcType=VARCHAR},
      SceneUseType = #{record.sceneusetype,jdbcType=INTEGER},
      GateId = #{record.gateid,jdbcType=VARCHAR},
      InsertTime = #{record.inserttime,jdbcType=TIMESTAMP},
      UpdateTime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ptlogie.domain.Scene" >
    update scene
    <set >
      <if test="sceneName != null" >
        scene_name = #{sceneName,jdbcType=VARCHAR},
      </if>
      <if test="workshopId != null" >
        workshop_id = #{workshopId,jdbcType=INTEGER},
      </if>
      <if test="scenelocation != null" >
        SceneLocation = #{scenelocation,jdbcType=VARCHAR},
      </if>
      <if test="sceneremark != null" >
        SceneRemark = #{sceneremark,jdbcType=VARCHAR},
      </if>
      <if test="parentsceneid != null" >
        ParentSceneId = #{parentsceneid,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        State = #{state,jdbcType=INTEGER},
      </if>
      <if test="scenetype != null" >
        SceneType = #{scenetype,jdbcType=VARCHAR},
      </if>
      <if test="devicestatus != null" >
        DeviceStatus = #{devicestatus,jdbcType=VARCHAR},
      </if>
      <if test="sceneusetype != null" >
        SceneUseType = #{sceneusetype,jdbcType=INTEGER},
      </if>
      <if test="gateid != null" >
        GateId = #{gateid,jdbcType=VARCHAR},
      </if>
      <if test="inserttime != null" >
        InsertTime = #{inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        UpdateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where scene_id = #{sceneId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ptlogie.domain.Scene" >
    update scene
    set scene_name = #{sceneName,jdbcType=VARCHAR},
      workshop_id = #{workshopId,jdbcType=INTEGER},
      SceneLocation = #{scenelocation,jdbcType=VARCHAR},
      SceneRemark = #{sceneremark,jdbcType=VARCHAR},
      ParentSceneId = #{parentsceneid,jdbcType=INTEGER},
      State = #{state,jdbcType=INTEGER},
      SceneType = #{scenetype,jdbcType=VARCHAR},
      DeviceStatus = #{devicestatus,jdbcType=VARCHAR},
      SceneUseType = #{sceneusetype,jdbcType=INTEGER},
      GateId = #{gateid,jdbcType=VARCHAR},
      InsertTime = #{inserttime,jdbcType=TIMESTAMP},
      UpdateTime = #{updatetime,jdbcType=TIMESTAMP}
    where scene_id = #{sceneId,jdbcType=INTEGER}
  </update>
</mapper>