<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ptlogie.mapper.SceneMapper" >
  <resultMap id="BaseResultMap" type="com.ptlogie.domain.Scene" >
    <id column="sceneId" property="sceneid" jdbcType="INTEGER" />
    <result column="gatewayId" property="gatewayid" jdbcType="INTEGER" />
    <result column="sceneName" property="scenename" jdbcType="VARCHAR" />
    <result column="sceneType" property="scenetype" jdbcType="VARCHAR" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="articleName" property="articlename" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    sceneId, gatewayId, sceneName, sceneType, location, remark, articleName
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ptlogie.domain.SceneExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from scene
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from scene
    where sceneId = #{sceneid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from scene
    where sceneId = #{sceneid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ptlogie.domain.SceneExample" >
    delete from scene
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ptlogie.domain.Scene" >
    insert into scene (sceneId, gatewayId, sceneName, 
      sceneType, location, remark, 
      articleName)
    values (#{sceneid,jdbcType=INTEGER}, #{gatewayid,jdbcType=INTEGER}, #{scenename,jdbcType=VARCHAR}, 
      #{scenetype,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{articlename,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ptlogie.domain.Scene" >
    insert into scene
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sceneid != null" >
        sceneId,
      </if>
      <if test="gatewayid != null" >
        gatewayId,
      </if>
      <if test="scenename != null" >
        sceneName,
      </if>
      <if test="scenetype != null" >
        sceneType,
      </if>
      <if test="location != null" >
        location,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="articlename != null" >
        articleName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sceneid != null" >
        #{sceneid,jdbcType=INTEGER},
      </if>
      <if test="gatewayid != null" >
        #{gatewayid,jdbcType=INTEGER},
      </if>
      <if test="scenename != null" >
        #{scenename,jdbcType=VARCHAR},
      </if>
      <if test="scenetype != null" >
        #{scenetype,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="articlename != null" >
        #{articlename,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ptlogie.domain.SceneExample" resultType="java.lang.Integer" >
    select count(*) from scene
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update scene
    <set >
      <if test="record.sceneid != null" >
        sceneId = #{record.sceneid,jdbcType=INTEGER},
      </if>
      <if test="record.gatewayid != null" >
        gatewayId = #{record.gatewayid,jdbcType=INTEGER},
      </if>
      <if test="record.scenename != null" >
        sceneName = #{record.scenename,jdbcType=VARCHAR},
      </if>
      <if test="record.scenetype != null" >
        sceneType = #{record.scenetype,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null" >
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.articlename != null" >
        articleName = #{record.articlename,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update scene
    set sceneId = #{record.sceneid,jdbcType=INTEGER},
      gatewayId = #{record.gatewayid,jdbcType=INTEGER},
      sceneName = #{record.scenename,jdbcType=VARCHAR},
      sceneType = #{record.scenetype,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      articleName = #{record.articlename,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ptlogie.domain.Scene" >
    update scene
    <set >
      <if test="gatewayid != null" >
        gatewayId = #{gatewayid,jdbcType=INTEGER},
      </if>
      <if test="scenename != null" >
        sceneName = #{scenename,jdbcType=VARCHAR},
      </if>
      <if test="scenetype != null" >
        sceneType = #{scenetype,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="articlename != null" >
        articleName = #{articlename,jdbcType=VARCHAR},
      </if>
    </set>
    where sceneId = #{sceneid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ptlogie.domain.Scene" >
    update scene
    set gatewayId = #{gatewayid,jdbcType=INTEGER},
      sceneName = #{scenename,jdbcType=VARCHAR},
      sceneType = #{scenetype,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      articleName = #{articlename,jdbcType=VARCHAR}
    where sceneId = #{sceneid,jdbcType=INTEGER}
  </update>
  
  
  <!--区域信息查询  -->
   <select id="areaData" resultType="java.util.Map"  >
select t5.sceneId,t5.sceneName,t5.location,t5.articleName,count(t5.equipmentId) deviceCount,sum(t5.errorcount) errorCount from 
(select t3.*,count(t4.id) as errorcount from error t4  right join 
(select t1.* ,t2.equipmentId from 
(select sceneid ,scenename,location,articleName from scene)t1  left join (select sceneId ,equipmentId from equipment)t2 on t1.sceneId=t2.sceneId  )t3 on t4.equipmentId=t3.equipmentId group by t3.sceneId,t3.equipmentId)t5
group by t5.sceneId
  </select>

  
     <select id="findAll" resultType="com.ptlogie.domain.Scene"  >
  		select * from scene 
  </select>

  
  
  <select id="findAreaList" resultType="java.util.Map" parameterType="java.util.Map">
    select t1.*,  ifnull(t2.count ,0) as count  from 
(select s.*,e.equipmentName from scene s join equipment e on s.gatewayId=e.equipmentId) t1 left join (select count(*) count,sceneId from  equipment where equipmentType in(1,4,5) group by sceneId)t2
on t1.sceneId=t2.sceneId
    <if test="param.condition != null  " >
      where   t1.sceneName like '%${param.condition}%' 
    </if>
<!--   order by userId desc  -->
  <if test="param.start != null  " >
        limit #{param.start}
    </if>
   <if test="param.start != null  " >
        ,#{param.pageSize} ;
    </if>
  </select>
  
    <!-- 根据公司id查询该公司下的所有区域 -->
  <select id="getSceneListByCompanyid" resultMap="BaseResultMap" parameterType="int">
  	select 
  		sceneId,
	    gatewayId,
	    sceneName,
	    sceneType,
	    location,
	    remark,
	    articleName
	from
		scene
	where
		1 = 1 
  </select>
</mapper>