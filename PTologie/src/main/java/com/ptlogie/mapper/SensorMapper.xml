<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ptlogie.mapper.SensorMapper" >
  <resultMap id="BaseResultMap" type="com.ptlogie.domain.Sensor" >
    <id column="sensorId" property="sensorid" jdbcType="INTEGER" />
    <result column="equipmentId" property="equipmentid" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="insertTime" property="inserttime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="gateId" property="gateid" jdbcType="VARCHAR" />
    <result column="value" property="value" jdbcType="REAL" />
  </resultMap>
  
 
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    sensorId, equipmentId, type, insertTime, updateTime, gateId, value
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ptlogie.domain.SensorExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sensor
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sensor
    where sensorId = #{sensorid,jdbcType=INTEGER}
  </select>
  
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sensor
    where sensorId = #{sensorid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ptlogie.domain.SensorExample" >
    delete from sensor
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ptlogie.domain.Sensor" >
    insert into sensor (sensorId, equipmentId, type, 
      insertTime, updateTime, gateId, 
      value)
    values (#{sensorid,jdbcType=INTEGER}, #{equipmentid,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{inserttime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{gateid,jdbcType=VARCHAR}, 
      #{value,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" parameterType="com.ptlogie.domain.Sensor" >
    insert into sensor
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sensorid != null" >
        sensorId,
      </if>
      <if test="equipmentid != null" >
        equipmentId,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="inserttime != null" >
        insertTime,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
      <if test="gateid != null" >
        gateId,
      </if>
      <if test="value != null" >
        value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sensorid != null" >
        #{sensorid,jdbcType=INTEGER},
      </if>
      <if test="equipmentid != null" >
        #{equipmentid,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="inserttime != null" >
        #{inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="gateid != null" >
        #{gateid,jdbcType=VARCHAR},
      </if>
      <if test="value != null" >
        #{value,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ptlogie.domain.SensorExample" resultType="java.lang.Integer" >
    select count(*) from sensor
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sensor
    <set >
      <if test="record.sensorid != null" >
        sensorId = #{record.sensorid,jdbcType=INTEGER},
      </if>
      <if test="record.equipmentid != null" >
        equipmentId = #{record.equipmentid,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.inserttime != null" >
        insertTime = #{record.inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gateid != null" >
        gateId = #{record.gateid,jdbcType=VARCHAR},
      </if>
      <if test="record.value != null" >
        value = #{record.value,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sensor
    set sensorId = #{record.sensorid,jdbcType=INTEGER},
      equipmentId = #{record.equipmentid,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      insertTime = #{record.inserttime,jdbcType=TIMESTAMP},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      gateId = #{record.gateid,jdbcType=VARCHAR},
      value = #{record.value,jdbcType=REAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ptlogie.domain.Sensor" >
    update sensor
    <set >
      <if test="equipmentid != null" >
        equipmentId = #{equipmentid,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="inserttime != null" >
        insertTime = #{inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="gateid != null" >
        gateId = #{gateid,jdbcType=VARCHAR},
      </if>
      <if test="value != null" >
        value = #{value,jdbcType=REAL},
      </if>
    </set>
    where sensorId = #{sensorid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ptlogie.domain.Sensor" >
    update sensor
    set equipmentId = #{equipmentid,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      insertTime = #{inserttime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      gateId = #{gateid,jdbcType=VARCHAR},
      value = #{value,jdbcType=REAL}
    where sensorId = #{sensorid,jdbcType=INTEGER}
  </update>
  
  
  
   <select id="findByType" resultType="java.util.Map"  >
    SELECT  count(*) as count, 
(CASE type  WHEN 1 THEN '温度传感器' 
  WHEN 2 THEN '湿度传感器' 
  WHEN 3 THEN '温湿度传感器' 
  WHEN 4 THEN '烟感传感器'  
END)as type 
FROM    sensor 
GROUP BY type 

  </select>
</mapper>